//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace platform.ltsyazilim.com.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LtsWebEntities : DbContext
    {
        public LtsWebEntities()
            : base("name=LtsWebEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C_OrderEndPositions> C_OrderEndPositions { get; set; }
        public virtual DbSet<C_OrderStartPositions> C_OrderStartPositions { get; set; }
        public virtual DbSet<DefLocationCities> DefLocationCities { get; set; }
        public virtual DbSet<DefLocationCounties> DefLocationCounties { get; set; }
        public virtual DbSet<DefLocationCountries> DefLocationCountries { get; set; }
        public virtual DbSet<DefLocationRegions> DefLocationRegions { get; set; }
        public virtual DbSet<DefOrderTypes> DefOrderTypes { get; set; }
        public virtual DbSet<DefProductPackages> DefProductPackages { get; set; }
        public virtual DbSet<DefProductProperties> DefProductProperties { get; set; }
        public virtual DbSet<DefProductTypes> DefProductTypes { get; set; }
        public virtual DbSet<DefProductUnits> DefProductUnits { get; set; }
        public virtual DbSet<DefVehicleTypes> DefVehicleTypes { get; set; }
        public virtual DbSet<Firms> Firms { get; set; }
        public virtual DbSet<LogMembershipCheckPasswordRenewalCodes> LogMembershipCheckPasswordRenewalCodes { get; set; }
        public virtual DbSet<LogMembershipLogins> LogMembershipLogins { get; set; }
        public virtual DbSet<LogMembershipRegisterCheckCodes> LogMembershipRegisterCheckCodes { get; set; }
        public virtual DbSet<LogMembershipRegisterReSendCodes> LogMembershipRegisterReSendCodes { get; set; }
        public virtual DbSet<LogMembershipSendPasswordRenewalCodes> LogMembershipSendPasswordRenewalCodes { get; set; }
        public virtual DbSet<LogSystemMailSend> LogSystemMailSend { get; set; }
        public virtual DbSet<MapFirmToUser> MapFirmToUser { get; set; }
        public virtual DbSet<Membership> Membership { get; set; }
        public virtual DbSet<MembershipPasswordRenewals> MembershipPasswordRenewals { get; set; }
        public virtual DbSet<OrderProductProperties> OrderProductProperties { get; set; }
        public virtual DbSet<Orders> Orders { get; set; }
        public virtual DbSet<OrderDetails> OrderDetails { get; set; }
        public virtual DbSet<OrderRoutes> OrderRoutes { get; set; }
    
        public virtual ObjectResult<AdministratorSelectFirmDetails_Result> AdministratorSelectFirmDetails(Nullable<int> firmId)
        {
            var firmIdParameter = firmId.HasValue ?
                new ObjectParameter("FirmId", firmId) :
                new ObjectParameter("FirmId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdministratorSelectFirmDetails_Result>("AdministratorSelectFirmDetails", firmIdParameter);
        }
    
        public virtual ObjectResult<AdministratorSelectFirms_Result> AdministratorSelectFirms()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdministratorSelectFirms_Result>("AdministratorSelectFirms");
        }
    
        public virtual ObjectResult<AdministratorSelectUnApprovedFirmDetails_Result> AdministratorSelectUnApprovedFirmDetails(Nullable<int> firmId)
        {
            var firmIdParameter = firmId.HasValue ?
                new ObjectParameter("FirmId", firmId) :
                new ObjectParameter("FirmId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdministratorSelectUnApprovedFirmDetails_Result>("AdministratorSelectUnApprovedFirmDetails", firmIdParameter);
        }
    
        public virtual ObjectResult<AdministratorSelectUnapprovedFirms_Result> AdministratorSelectUnapprovedFirms()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdministratorSelectUnapprovedFirms_Result>("AdministratorSelectUnapprovedFirms");
        }
    
        public virtual ObjectResult<ManageSelectCountyListForTreeView_Result> ManageSelectCountyListForTreeView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ManageSelectCountyListForTreeView_Result>("ManageSelectCountyListForTreeView");
        }
    }
}
