//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-01-28 - 12:02:32
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Itsyazilim.Web.Domain;
using Itsyazilim.Web.Database.ORM;

namespace Itsyazilim.Web.Domain
{

    /// <summary>
    /// Assembler for <see cref="Membership"/> and <see cref="MembershipDTO"/>.
    /// </summary>
    public static partial class MembershipAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="MembershipDTO"/> converted from <see cref="Membership"/>.</param>
        static partial void OnDTO(this Membership entity, MembershipDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="Membership"/> converted from <see cref="MembershipDTO"/>.</param>
        static partial void OnEntity(this MembershipDTO dto, Membership entity);

        /// <summary>
        /// Converts this instance of <see cref="MembershipDTO"/> to an instance of <see cref="Membership"/>.
        /// </summary>
        /// <param name="dto"><see cref="MembershipDTO"/> to convert.</param>
        public static Membership ToEntity(this MembershipDTO dto)
        {
            if (dto == null) return null;

            var entity = new Membership();

            entity.UserId = dto.UserId;
            entity.Email = dto.Email;
            entity.Password = dto.Password;
            entity.Name = dto.Name;
            entity.Surname = dto.Surname;
            entity.StatusId = dto.StatusId;
            entity.RoleId = dto.RoleId;
            entity.IsDeleted = dto.IsDeleted;
            entity.FailedPasswordAttemptCount = dto.FailedPasswordAttemptCount;
            entity.LastLoginDate = dto.LastLoginDate;
            entity.LastPasswordChangeDate = dto.LastPasswordChangeDate;
            entity.Comment = dto.Comment;
            entity.VerifyOn = dto.VerifyOn;
            entity.IP = dto.IP;
            entity.CreatedOn = dto.CreatedOn;
            entity.UpdatedOn = dto.UpdatedOn;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="Membership"/> to an instance of <see cref="MembershipDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="Membership"/> to convert.</param>
        public static MembershipDTO ToDTO(this Membership entity)
        {
            if (entity == null) return null;

            var dto = new MembershipDTO();

            dto.UserId = entity.UserId;
            dto.Email = entity.Email;
            dto.Password = entity.Password;
            dto.Name = entity.Name;
            dto.Surname = entity.Surname;
            dto.StatusId = entity.StatusId;
            dto.RoleId = entity.RoleId;
            dto.IsDeleted = entity.IsDeleted;
            dto.FailedPasswordAttemptCount = entity.FailedPasswordAttemptCount;
            dto.LastLoginDate = entity.LastLoginDate;
            dto.LastPasswordChangeDate = entity.LastPasswordChangeDate;
            dto.Comment = entity.Comment;
            dto.VerifyOn = entity.VerifyOn;
            dto.IP = entity.IP;
            dto.CreatedOn = entity.CreatedOn;
            dto.UpdatedOn = entity.UpdatedOn;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="MembershipDTO"/> to an instance of <see cref="Membership"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<Membership> ToEntities(this IEnumerable<MembershipDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="Membership"/> to an instance of <see cref="MembershipDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<MembershipDTO> ToDTOs(this IEnumerable<Membership> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
