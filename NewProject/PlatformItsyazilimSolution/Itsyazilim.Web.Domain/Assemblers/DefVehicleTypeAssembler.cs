//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-01-28 - 12:02:31
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Itsyazilim.Web.Domain;
using Itsyazilim.Web.Database.ORM;

namespace Itsyazilim.Web.Domain.Assemblers
{

    /// <summary>
    /// Assembler for <see cref="DefVehicleType"/> and <see cref="DefVehicleTypeDTO"/>.
    /// </summary>
    public static partial class DefVehicleTypeAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="DefVehicleTypeDTO"/> converted from <see cref="DefVehicleType"/>.</param>
        static partial void OnDTO(this DefVehicleType entity, DefVehicleTypeDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="DefVehicleType"/> converted from <see cref="DefVehicleTypeDTO"/>.</param>
        static partial void OnEntity(this DefVehicleTypeDTO dto, DefVehicleType entity);

        /// <summary>
        /// Converts this instance of <see cref="DefVehicleTypeDTO"/> to an instance of <see cref="DefVehicleType"/>.
        /// </summary>
        /// <param name="dto"><see cref="DefVehicleTypeDTO"/> to convert.</param>
        public static DefVehicleType ToEntity(this DefVehicleTypeDTO dto)
        {
            if (dto == null) return null;

            var entity = new DefVehicleType();

            entity.VehicleTypeId = dto.VehicleTypeId;
            entity.VehicleTypeName = dto.VehicleTypeName;
            entity.VehicleWidth = dto.VehicleWidth;
            entity.VehicleLength = dto.VehicleLength;
            entity.VehicleHeight = dto.VehicleHeight;
            entity.VehicleVolume = dto.VehicleVolume;
            entity.VehicleDesi = dto.VehicleDesi;
            entity.VehicleWeight = dto.VehicleWeight;
            entity.CreatedBy = dto.CreatedBy;
            entity.CreatedOn = dto.CreatedOn;
            entity.IsDeleted = dto.IsDeleted;
            entity.DeletedBy = dto.DeletedBy;
            entity.DeletedOn = dto.DeletedOn;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="DefVehicleType"/> to an instance of <see cref="DefVehicleTypeDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="DefVehicleType"/> to convert.</param>
        public static DefVehicleTypeDTO ToDTO(this DefVehicleType entity)
        {
            if (entity == null) return null;

            var dto = new DefVehicleTypeDTO();

            dto.VehicleTypeId = entity.VehicleTypeId;
            dto.VehicleTypeName = entity.VehicleTypeName;
            dto.VehicleWidth = entity.VehicleWidth;
            dto.VehicleLength = entity.VehicleLength;
            dto.VehicleHeight = entity.VehicleHeight;
            dto.VehicleVolume = entity.VehicleVolume;
            dto.VehicleDesi = entity.VehicleDesi;
            dto.VehicleWeight = entity.VehicleWeight;
            dto.CreatedBy = entity.CreatedBy;
            dto.CreatedOn = entity.CreatedOn;
            dto.IsDeleted = entity.IsDeleted;
            dto.DeletedBy = entity.DeletedBy;
            dto.DeletedOn = entity.DeletedOn;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="DefVehicleTypeDTO"/> to an instance of <see cref="DefVehicleType"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<DefVehicleType> ToEntities(this IEnumerable<DefVehicleTypeDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="DefVehicleType"/> to an instance of <see cref="DefVehicleTypeDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<DefVehicleTypeDTO> ToDTOs(this IEnumerable<DefVehicleType> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
