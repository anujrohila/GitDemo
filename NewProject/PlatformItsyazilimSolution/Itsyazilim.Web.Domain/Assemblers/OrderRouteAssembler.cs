//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-01-28 - 12:02:33
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Itsyazilim.Web.Domain;
using Itsyazilim.Web.Database.ORM;


namespace Itsyazilim.Web.Domain.Assemblers
{
    /// <summary>
    /// Assembler for <see cref="OrderRoute"/> and <see cref="OrderRouteDTO"/>.
    /// </summary>
    public static partial class OrderRouteAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="OrderRouteDTO"/> converted from <see cref="OrderRoute"/>.</param>
        static partial void OnDTO(this OrderRoute entity, OrderRouteDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="OrderRoute"/> converted from <see cref="OrderRouteDTO"/>.</param>
        static partial void OnEntity(this OrderRouteDTO dto, OrderRoute entity);

        /// <summary>
        /// Converts this instance of <see cref="OrderRouteDTO"/> to an instance of <see cref="OrderRoute"/>.
        /// </summary>
        /// <param name="dto"><see cref="OrderRouteDTO"/> to convert.</param>
        public static OrderRoute ToEntity(this OrderRouteDTO dto)
        {
            if (dto == null) return null;

            var entity = new OrderRoute();

            entity.OrderRootId = dto.OrderRootId;
            entity.OrderId = dto.OrderId;
            entity.StartCountyId = dto.StartCountyId;
            entity.EndCountyId = dto.EndCountyId;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="OrderRoute"/> to an instance of <see cref="OrderRouteDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="OrderRoute"/> to convert.</param>
        public static OrderRouteDTO ToDTO(this OrderRoute entity)
        {
            if (entity == null) return null;

            var dto = new OrderRouteDTO();

            dto.OrderRootId = entity.OrderRootId;
            dto.OrderId = entity.OrderId;
            dto.StartCountyId = entity.StartCountyId;
            dto.EndCountyId = entity.EndCountyId;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="OrderRouteDTO"/> to an instance of <see cref="OrderRoute"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<OrderRoute> ToEntities(this IEnumerable<OrderRouteDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="OrderRoute"/> to an instance of <see cref="OrderRouteDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<OrderRouteDTO> ToDTOs(this IEnumerable<OrderRoute> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
