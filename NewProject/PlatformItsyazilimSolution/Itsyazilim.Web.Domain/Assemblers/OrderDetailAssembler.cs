//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-01-28 - 12:02:33
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Itsyazilim.Web.Domain;
using Itsyazilim.Web.Database.ORM;

namespace Itsyazilim.Web.Domain.Assemblers
{

    /// <summary>
    /// Assembler for <see cref="OrderDetail"/> and <see cref="OrderDetailDTO"/>.
    /// </summary>
    public static partial class OrderDetailAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="OrderDetailDTO"/> converted from <see cref="OrderDetail"/>.</param>
        static partial void OnDTO(this OrderDetail entity, OrderDetailDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="OrderDetail"/> converted from <see cref="OrderDetailDTO"/>.</param>
        static partial void OnEntity(this OrderDetailDTO dto, OrderDetail entity);

        /// <summary>
        /// Converts this instance of <see cref="OrderDetailDTO"/> to an instance of <see cref="OrderDetail"/>.
        /// </summary>
        /// <param name="dto"><see cref="OrderDetailDTO"/> to convert.</param>
        public static OrderDetail ToEntity(this OrderDetailDTO dto)
        {
            if (dto == null) return null;

            var entity = new OrderDetail();

            entity.OrderDetailId = dto.OrderDetailId;
            entity.OrderRouteId = dto.OrderRouteId;
            entity.OrderDetailType = dto.OrderDetailType;
            entity.LoadProductPackageId = dto.LoadProductPackageId;
            entity.LoadProductTypeId = dto.LoadProductTypeId;
            entity.LoadProductWeight = dto.LoadProductWeight;
            entity.LoadProductVolume = dto.LoadProductVolume;
            entity.LoadProductVisibleVolume = dto.LoadProductVisibleVolume;
            entity.LoadProductVolumeVisibleUnitId = dto.LoadProductVolumeVisibleUnitId;
            entity.Comment = dto.Comment;
            entity.CreatedOn = dto.CreatedOn;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="OrderDetail"/> to an instance of <see cref="OrderDetailDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="OrderDetail"/> to convert.</param>
        public static OrderDetailDTO ToDTO(this OrderDetail entity)
        {
            if (entity == null) return null;

            var dto = new OrderDetailDTO();

            dto.OrderDetailId = entity.OrderDetailId;
            dto.OrderRouteId = entity.OrderRouteId;
            dto.OrderDetailType = entity.OrderDetailType;
            dto.LoadProductPackageId = entity.LoadProductPackageId;
            dto.LoadProductTypeId = entity.LoadProductTypeId;
            dto.LoadProductWeight = entity.LoadProductWeight;
            dto.LoadProductVolume = entity.LoadProductVolume;
            dto.LoadProductVisibleVolume = entity.LoadProductVisibleVolume;
            dto.LoadProductVolumeVisibleUnitId = entity.LoadProductVolumeVisibleUnitId;
            dto.Comment = entity.Comment;
            dto.CreatedOn = entity.CreatedOn;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="OrderDetailDTO"/> to an instance of <see cref="OrderDetail"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<OrderDetail> ToEntities(this IEnumerable<OrderDetailDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="OrderDetail"/> to an instance of <see cref="OrderDetailDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<OrderDetailDTO> ToDTOs(this IEnumerable<OrderDetail> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
