//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-01-28 - 12:02:30
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Itsyazilim.Web.Domain;
using Itsyazilim.Web.Database.ORM;

namespace Itsyazilim.Web.Domain
{

    /// <summary>
    /// Assembler for <see cref="DefProductPackage"/> and <see cref="DefProductPackageDTO"/>.
    /// </summary>
    public static partial class DefProductPackageAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="DefProductPackageDTO"/> converted from <see cref="DefProductPackage"/>.</param>
        static partial void OnDTO(this DefProductPackage entity, DefProductPackageDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="DefProductPackage"/> converted from <see cref="DefProductPackageDTO"/>.</param>
        static partial void OnEntity(this DefProductPackageDTO dto, DefProductPackage entity);

        /// <summary>
        /// Converts this instance of <see cref="DefProductPackageDTO"/> to an instance of <see cref="DefProductPackage"/>.
        /// </summary>
        /// <param name="dto"><see cref="DefProductPackageDTO"/> to convert.</param>
        public static DefProductPackage ToEntity(this DefProductPackageDTO dto)
        {
            if (dto == null) return null;

            var entity = new DefProductPackage();

            entity.ProductPackageId = dto.ProductPackageId;
            entity.ProductPackageName = dto.ProductPackageName;
            entity.CreatedBy = dto.CreatedBy;
            entity.CreatedOn = dto.CreatedOn;
            entity.IsDeleted = dto.IsDeleted;
            entity.DeletedBy = dto.DeletedBy;
            entity.DeletedOn = dto.DeletedOn;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="DefProductPackage"/> to an instance of <see cref="DefProductPackageDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="DefProductPackage"/> to convert.</param>
        public static DefProductPackageDTO ToDTO(this DefProductPackage entity)
        {
            if (entity == null) return null;

            var dto = new DefProductPackageDTO();

            dto.ProductPackageId = entity.ProductPackageId;
            dto.ProductPackageName = entity.ProductPackageName;
            dto.CreatedBy = entity.CreatedBy;
            dto.CreatedOn = entity.CreatedOn;
            dto.IsDeleted = entity.IsDeleted;
            dto.DeletedBy = entity.DeletedBy;
            dto.DeletedOn = entity.DeletedOn;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="DefProductPackageDTO"/> to an instance of <see cref="DefProductPackage"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<DefProductPackage> ToEntities(this IEnumerable<DefProductPackageDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="DefProductPackage"/> to an instance of <see cref="DefProductPackageDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<DefProductPackageDTO> ToDTOs(this IEnumerable<DefProductPackage> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
